{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","console","log","style","width","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","div","key","layout","whileHover","opacity","s","onClick","img","src","alt","initial","animate","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAYeA,EAVD,WACZ,OACE,yBAAKC,UAAU,SACb,uCACA,kDACA,uL,2CCQJC,gBAVmB,CACjBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAiBR,YACjBS,EAAmBT,cACnBU,EAAYV,YAAmBW,WAAWC,gBCQnCC,EAvBI,SAACC,GAAS,IAAD,EACQC,mBAAS,GADjB,mBACjBC,EADiB,KACPC,EADO,OAEEF,mBAAS,MAFX,mBAEjBG,EAFiB,KAEVC,EAFU,OAGFJ,mBAAS,MAHP,mBAGjBK,EAHiB,KAGZC,EAHY,KAqBxB,OAjBAC,qBAAU,WACN,IAAMC,EAAaf,EAAegB,IAAIV,EAAKW,MACrCC,EAAgBjB,EAAiBkB,WAAW,UAElDJ,EAAWK,IAAId,GAAMe,GAAG,iBAAiB,SAACC,GACtC,IAAIC,EAAcD,EAAKE,iBAAmBF,EAAKG,WAAa,IAC5DhB,EAAYc,MACb,SAACG,GACAf,EAASe,KAJb,sBAKG,8BAAAC,EAAA,sEACmBZ,EAAWa,iBAD9B,OACOhB,EADP,OAEOiB,EAAY3B,IAClBgB,EAAcY,IAAI,CAAClB,MAAKiB,cACxBhB,EAAOD,GAJR,8CAMJ,CAACN,IAEG,CAACE,WAAUI,MAAKF,UCTZqB,EAZK,SAAC,GAAoB,IAAnBzB,EAAkB,EAAlBA,KAAM0B,EAAY,EAAZA,QAAY,EACZ3B,EAAWC,GAA5BM,EAD6B,EAC7BA,IAAKJ,EADwB,EACxBA,SAOZ,OANAyB,QAAQC,IAAI1B,EAASI,GACrBE,qBAAU,WACFF,GACAoB,EAAQ,QAET,CAACpB,EAAKoB,IAET,yBAAKzC,UAAU,eAAe4C,MAAO,CAACC,MAAM5B,EAAW,MAAvD,aCgBO6B,EA1BI,WAAM,IAAD,EACI9B,mBAAS,MADb,mBACbD,EADa,KACP0B,EADO,KAEdM,EAAQ,CAAC,YAAa,cAFR,EAGM/B,mBAAS,MAHf,mBAGbG,EAHa,KAGNC,EAHM,KAepB,OACI,8BACI,2BAAO4B,KAAK,OAAOC,SAZL,SAACC,GACnB,IAAIC,EAAWD,EAAEE,OAAOC,MAAM,GAC1BF,GAAYJ,EAAMO,SAASH,EAASH,MACpCP,EAAQU,IAERV,EAAQ,MACRrB,EAAS,oDAEbsB,QAAQC,IAAIQ,MAKR,yBAAKnD,UAAU,UACTmB,GAAS,yBAAKnB,UAAU,SAAUmB,GACnCJ,GAAQ,6BAAMA,EAAKW,MACnBX,GAAQ,kBAAC,EAAD,CAAaA,KAAMA,EAAM0B,QAASA,O,OCC5Cc,EAtBM,SAAC3B,GAAgB,IAAD,EACXZ,mBAAS,IADE,mBAC5BwC,EAD4B,KACtBC,EADsB,KAmBnC,OAhBAlC,qBAAU,WACR,IAAMmC,EAAQhD,EAAiBkB,WAAWA,GACvC+B,QAAQ,YAAa,QACrBC,YAAW,SAAA7B,GACV,IAAI8B,EAAY,GAChB9B,EAAK+B,SAAQ,SAAAC,GACXF,EAAUG,KAAV,2BAAmBD,EAAIE,QAAvB,IAA+BC,GAAIH,EAAIG,SAEzCT,EAAQI,MAGZ,OAAO,kBAAMH,OAGZ,CAAC9B,IAEG,CAAE4B,S,OCIIW,EAtBG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACXZ,EAASD,EAAa,UAAtBC,KAER,OADEd,QAAQC,IAAIa,GAEZ,yBAAKxD,UAAU,YACZwD,GAAQA,EAAKa,KAAI,SAAAN,GAAG,OACnB,kBAAC,IAAOO,IAAR,CAAYtE,UAAU,WAAWuE,IAAKR,EAAIG,GACxCM,QAAM,EACNC,WAAY,CAAEC,QAAS,GAAIC,GAAC,EAC5BC,QAAS,kBAAMR,EAAeL,EAAI1C,OAElC,kBAAC,IAAOwD,IAAR,CAAYC,IAAKf,EAAI1C,IAAK0D,IAAI,eAC5BC,QAAS,CAAEN,QAAS,GACpBO,QAAS,CAAEP,QAAS,GACpBQ,WAAY,CAAEC,MAAO,WCMlBC,EArBD,SAAC,GAAqC,IAAnChB,EAAkC,EAAlCA,eAAgBiB,EAAkB,EAAlBA,YAQ/B,OACE,kBAAC,IAAOf,IAAR,CAAYtE,UAAU,WAAW4E,QAPf,SAAC1B,GACfA,EAAEE,OAAOkC,UAAUC,SAAS,aAC9BnB,EAAe,OAMfY,QAAS,CAAEN,QAAS,GACpBO,QAAS,CAAEP,QAAS,IAEpB,kBAAC,IAAOG,IAAR,CAAYC,IAAKO,EAAaN,IAAI,eAChCC,QAAS,CAAEQ,EAAG,UACdP,QAAS,CAAEO,EAAG,OCGPC,MAff,WAAgB,IAAD,EACyBzE,mBAAS,MADlC,mBACNqE,EADM,KACOjB,EADP,KAGb,OACE,yBAAKpE,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWoE,eAAgBA,IACzBiB,GACE,kBAAC,EAAD,CAAOA,YAAaA,EAAajB,eAAgBA,MCV3DsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.de889ef5.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>TheGram</h1>\n      <h2>Your Photo Gallery</h2>\n      <p>Below are the list of pictures stored on our server. So far authentication has not been implemented. Anyone can upload a photo. This shall be changed.</p>\n    </div>\n  )\n}\n\nexport default Title;","import * as firebase from 'firebase/app';\r\nimport 'firebase/storage';\r\nimport 'firebase/firestore';\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCAvmeAg3k0mCztFPEqGR019edjPpBGsXU\",\r\n    authDomain: \"thegram-cdcef.firebaseapp.com\",\r\n    databaseURL: \"https://thegram-cdcef.firebaseio.com\",\r\n    projectId: \"thegram-cdcef\",\r\n    storageBucket: \"thegram-cdcef.appspot.com\",\r\n    messagingSenderId: \"529365391774\",\r\n    appId: \"1:529365391774:web:945b05acb805623a0e5e8f\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const projectStorage = firebase.storage();\r\n  const projectFirestore = firebase.firestore();\r\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n  export {projectStorage, projectFirestore, timestamp};\r\n  ","import React, {useState, useEffect} from 'react'\r\nimport {projectStorage, projectFirestore, timestamp} from '../firebase/config';\r\n\r\n//create a react hook\r\nconst useStorage = (file) =>{\r\n    const [progress, setProgress] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [url, setUrl] = useState(null);\r\n    useEffect(()=>{\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images'); \r\n\r\n        storageRef.put(file).on('state_changed', (snap)=>{\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes)* 100;\r\n            setProgress(percentage);\r\n        }, (err)=>{\r\n            setError(err);\r\n        }, async()=>{\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timestamp();\r\n            collectionRef.add({url, createdAt});\r\n            setUrl(url);\r\n        })\r\n    }, [file]);\r\n\r\n    return {progress, url, error}\r\n}\r\nexport default useStorage;","import React, {useEffect} from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\n\r\n\r\nconst ProgressBar = ({file, setFile}) =>{\r\n    const {url, progress} = useStorage(file);\r\n    console.log(progress,url);\r\n    useEffect(() => {\r\n        if (url) {\r\n            setFile(null);\r\n          }\r\n        }, [url, setFile]);\r\n    return (\r\n        <div className=\"progress-bar\" style={{width:progress + '%'}}>progress</div>\r\n    )\r\n}\r\nexport default ProgressBar;","import React, {useState} from 'react'\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () =>{\r\n    const [file, setFile] = useState(null);\r\n    const types = ['image/png', 'image/jpeg'];\r\n    const [error, setError] = useState(null);\r\n\r\n    const changeHandler = (e)=>{\r\n        let selected = e.target.files[0];\r\n        if (selected && types.includes(selected.type)){\r\n            setFile(selected);\r\n        } else {\r\n            setFile(null);\r\n            setError('Error! Please select an image file(png or jpeg)');\r\n        }\r\n        console.log(selected);\r\n    }\r\n    return(\r\n        <form>\r\n            <input type=\"file\" onChange={changeHandler}/>\r\n            <div className=\"output\">\r\n                { error && <div className=\"error\">{ error }</div>}\r\n                {file && <div>{file.name}</div>}\r\n                {file && <ProgressBar file={file} setFile={setFile}/> }\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nexport default UploadForm;","import { useState, useEffect } from 'react';\r\nimport { projectFirestore } from '../firebase/config';\r\n\r\nconst useFirestore = (collection) => {\r\n  const [docs, setDocs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsub = projectFirestore.collection(collection)\r\n      .orderBy('createdAt', 'desc')\r\n      .onSnapshot(snap => {\r\n        let documents = [];\r\n        snap.forEach(doc => {\r\n          documents.push({...doc.data(), id: doc.id});\r\n        });\r\n        setDocs(documents);\r\n      });\r\n\r\n    return () => unsub();\r\n    // this is a cleanup function that react will run when\r\n    // a component using the hook unmounts\r\n  }, [collection]);\r\n\r\n  return { docs };\r\n}\r\n\r\nexport default useFirestore;","import React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore('images');\r\n    console.log(docs);\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs && docs.map(doc => (\r\n        <motion.div className=\"img-wrap\" key={doc.id} \r\n          layout\r\n          whileHover={{ opacity: 1 }}s\r\n          onClick={() => setSelectedImg(doc.url)}\r\n        >\r\n          <motion.img src={doc.url} alt=\"uploaded pic\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ delay: 1 }}\r\n          />\r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageGrid;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst Modal = ({ setSelectedImg, selectedImg }) => {\r\n\r\n  const handleClick = (e) => {\r\n    if (e.target.classList.contains('backdrop')) {\r\n      setSelectedImg(null);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <motion.div className=\"backdrop\" onClick={handleClick}\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n    >\r\n      <motion.img src={selectedImg} alt=\"enlarged pic\" \r\n        initial={{ y: \"-100vh\" }}\r\n        animate={{ y: 0 }}\r\n      />\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nexport default Modal;","import React, {useState} from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal'\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm/>\n      <ImageGrid setSelectedImg={setSelectedImg}/>\n      { selectedImg &&(\n          <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}/>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}